const nodemailer = require('nodemailer');
const crypto = require('crypto');

class EmailService {
  constructor() {
    this.transporter = nodemailer.createTransporter({
      host: process.env.SMTP_HOST || 'smtp.gmail.com',
      port: process.env.SMTP_PORT || 587,
      secure: false,
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS
      }
    });
  }

  generateVerificationToken() {
    return crypto.randomBytes(32).toString('hex');
  }

  async sendVerificationEmail(email, token, name) {
    const verificationUrl = `${process.env.FRONTEND_URL}/verify-email?token=${token}`;
    
    const mailOptions = {
      from: `"GeminiVoice AI" <${process.env.SMTP_USER}>`,
      to: email,
      subject: 'üéØ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email - GeminiVoice AI Call Center',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
            .button { display: inline-block; background: #667eea; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
            .features { background: white; padding: 20px; border-radius: 5px; margin: 20px 0; }
            .feature { margin: 10px 0; padding: 10px; border-left: 4px solid #667eea; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GeminiVoice AI!</h1>
              <p>–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–≤–æ–Ω–∫–æ–≤</p>
            </div>
            <div class="content">
              <h2>–ü—Ä–∏–≤–µ—Ç, ${name}! üëã</h2>
              
              <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ GeminiVoice AI Call Center! –í—ã —Å–¥–µ–ª–∞–ª–∏ –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤–∞—à–∏—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.</p>
              
              <div style="text-align: center;">
                <a href="${verificationUrl}" class="button">‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å Email</a>
              </div>
              
              <div class="features">
                <h3>üöÄ –ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</h3>
                <div class="feature">üìû <strong>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏</strong> - –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</div>
                <div class="feature">ü§ñ <strong>AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</strong> - 30-–º–∏–Ω—É—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –ò–ò –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π</div>
                <div class="feature">üí° <strong>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</strong> - –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</div>
                <div class="feature">üí∞ <strong>–†–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏</strong> - —É–∑–Ω–∞–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–µ–Ω–µ–≥ —Å—ç–∫–æ–Ω–æ–º–∏—Ç–µ</div>
                <div class="feature">üéØ <strong>–ì–æ—Ç–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã</strong> - –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á</div>
              </div>
              
              <p><strong>–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</strong></p>
              <ol>
                <li>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ</li>
                <li>–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</li>
                <li>–ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏</li>
                <li>–ü—Ä–æ–π–¥–∏—Ç–µ AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</li>
                <li>–ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
              </ol>
              
              <p style="color: #666; font-size: 14px;">
                –ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.
                <br>–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
              </p>
            </div>
          </div>
        </body>
        </html>
      `
    };

    try {
      await this.transporter.sendMail(mailOptions);
      console.log(`‚úÖ Verification email sent to ${email}`);
      return true;
    } catch (error) {
      console.error('‚ùå Error sending verification email:', error);
      return false;
    }
  }

  async sendWelcomeEmail(email, name, assignedNumber) {
    const mailOptions = {
      from: `"GeminiVoice AI" <${process.env.SMTP_USER}>`,
      to: email,
      subject: 'üéâ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –≥–æ—Ç–æ–≤! - GeminiVoice AI',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
            .number-box { background: white; border: 2px solid #667eea; padding: 20px; text-align: center; border-radius: 10px; margin: 20px 0; }
            .number { font-size: 24px; font-weight: bold; color: #667eea; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, ${name}!</h1>
              <p>–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</p>
            </div>
            <div class="content">
              <div class="number-box">
                <h3>üìû –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏:</h3>
                <div class="number">${assignedNumber}</div>
                <p style="color: #666;">–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –¥–ª—è AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</p>
              </div>
              
              <h3>ü§ñ –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø—Ä–∏ –∑–≤–æ–Ω–∫–µ:</h3>
              <ol>
                <li><strong>–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞</strong> - —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç, —á—Ç–æ –∑–≤–æ–Ω–∏—Ç–µ –∏–º–µ–Ω–Ω–æ –≤—ã</li>
                <li><strong>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ</strong> - –ò–ò –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—Å –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö</li>
                <li><strong>–ê–Ω–∞–ª–∏–∑ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π</strong> - 30-–º–∏–Ω—É—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –∑–∞–¥–∞—á–∞—Ö</li>
                <li><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</strong> - –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</li>
              </ol>
              
              <p><strong>üí° –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∑–≤–æ–Ω–∫—É:</strong></p>
              <ul>
                <li>–ü–æ–¥—É–º–∞–π—Ç–µ –æ –∑–∞–¥–∞—á–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å</li>
                <li>–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ</li>
                <li>–í—ã–¥–µ–ª–∏—Ç–µ 30 –º–∏–Ω—É—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏</li>
              </ul>
              
              <p style="text-align: center; margin-top: 30px;">
                <strong>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –Ω–æ–º–µ—Ä –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üìû</strong>
              </p>
            </div>
          </div>
        </body>
        </html>
      `
    };

    try {
      await this.transporter.sendMail(mailOptions);
      console.log(`‚úÖ Welcome email sent to ${email}`);
      return true;
    } catch (error) {
      console.error('‚ùå Error sending welcome email:', error);
      return false;
    }
  }

  async sendAnalysisResultEmail(email, name, analysis) {
    const mailOptions = {
      from: `"GeminiVoice AI" <${process.env.SMTP_USER}>`,
      to: email,
      subject: 'üéØ –í–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã! - GeminiVoice AI',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
            .analysis-box { background: white; padding: 20px; border-radius: 10px; margin: 20px 0; border-left: 4px solid #667eea; }
            .button { display: inline-block; background: #667eea; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üéØ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω, ${name}!</h1>
              <p>–í–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã</p>
            </div>
            <div class="content">
              <div class="analysis-box">
                <h3>ü§ñ –ê–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π:</h3>
                <p>${analysis.clientNeeds || '–ê–Ω–∞–ª–∏–∑ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏...'}</p>
              </div>
              
              <div class="analysis-box">
                <h3>üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h3>
                <p>${analysis.recommendedFeatures || '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è...'}</p>
              </div>
              
              <div class="analysis-box">
                <h3>üéØ –ì–æ—Ç–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã:</h3>
                <p>${analysis.generatedPrompts || '–ü—Ä–æ–º–ø—Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è...'}</p>
              </div>
              
              <div style="text-align: center;">
                <a href="${process.env.FRONTEND_URL}/dashboard" class="button">üöÄ –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</a>
              </div>
              
              <p>–í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ:</p>
              <ul>
                <li>üìä –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–µ–Ω–µ–≥</li>
                <li>üõ†Ô∏è –ì–æ—Ç–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</li>
                <li>üìã –ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –≤–Ω–µ–¥—Ä–µ–Ω–∏—è</li>
                <li>üí≥ –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Å–∫–∏–¥–∫–∞–º–∏</li>
              </ul>
            </div>
          </div>
        </body>
        </html>
      `
    };

    try {
      await this.transporter.sendMail(mailOptions);
      console.log(`‚úÖ Analysis result email sent to ${email}`);
      return true;
    } catch (error) {
      console.error('‚ùå Error sending analysis result email:', error);
      return false;
    }
  }
}

module.exports = new EmailService();